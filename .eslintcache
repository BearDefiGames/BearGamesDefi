[{"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\index.js":"1","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\index.js":"2","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\user.js":"3","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\TokenCardComponent\\index.js":"4","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\index.js":"5","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\store.js":"6","F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\index.js":"7","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\wallet.js":"8","F:\\MySitesNew\\1_Projects\\bear-games\\src\\index.js":"9","F:\\MySitesNew\\1_Projects\\bear-games\\src\\contexts\\index.js":"10","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\actions\\index.js":"11","F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\contractService\\contractDetails.js":"12","F:\\MySitesNew\\1_Projects\\bear-games\\src\\App.js":"13","F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\metamask\\index.js":"14","F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\MainPage\\index.js":"15"},{"size":247,"mtime":1608036833475,"results":"16","hashOfConfig":"17"},{"size":956,"mtime":1607510101364,"results":"18","hashOfConfig":"17"},{"size":363,"mtime":1608037538536,"results":"19","hashOfConfig":"17"},{"size":1654,"mtime":1608812389189,"results":"20","hashOfConfig":"17"},{"size":14344,"mtime":1608825989367,"results":"21","hashOfConfig":"17"},{"size":232,"mtime":1607510101371,"results":"22","hashOfConfig":"17"},{"size":46,"mtime":1607510101368,"results":"23","hashOfConfig":"17"},{"size":306,"mtime":1608037552883,"results":"24","hashOfConfig":"17"},{"size":371,"mtime":1607510101366,"results":"25","hashOfConfig":"17"},{"size":63,"mtime":1607510101366,"results":"26","hashOfConfig":"17"},{"size":100,"mtime":1608036833483,"results":"27","hashOfConfig":"17"},{"size":9443,"mtime":1608827170773,"results":"28","hashOfConfig":"17"},{"size":386,"mtime":1608803711951,"results":"29","hashOfConfig":"17"},{"size":4203,"mtime":1608827870131,"results":"30","hashOfConfig":"17"},{"size":320,"mtime":1608803712029,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ieojwp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\index.js",[],["68","69"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\user.js",["70"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\TokenCardComponent\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\index.js",["71","72","73","74","75","76"],"import React, { useRef } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport BigNumber from \"bignumber.js\";\r\nimport TokenCardComponent from './TokenCardComponent';\r\n\r\nimport {userActions, walletActions} from '../../redux/actions';\r\nimport { useContractContext } from '../../contexts/contractContext';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport './header.scss';\r\n\r\nimport trust_img from '../../assets/img/trust.png'\r\nimport logo from '../../assets/img/logo.svg'\r\nimport scrollUpImg from '../../assets/img/scroll-up.svg'\r\nimport metamask_img from '../../assets/img/metamask.svg'\r\nimport arrowPrevImg from '../../assets/img/prev.png'\r\nimport arrowNextImg from '../../assets/img/next.png'\r\nimport github from \"../../assets/img/socials/github_header.svg\";\r\nimport twitter from \"../../assets/img/socials/twitter_header.svg\";\r\nimport telegram from \"../../assets/img/socials/telegram_header.svg\";\r\nimport youtube from \"../../assets/img/socials/youtube_header.svg\";\r\nimport { github_url, telegram_url, twitter_url, youtube_url } from \"../Footer\";\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { walletService, contractService } = useContractContext()\r\n\r\n    const [isMenuActive, setIsMenuActive] = React.useState(false)\r\n    const [isTabActive, setIsTabActive] = React.useState(false);\r\n    const [isCounterActive, setCounterActive] = React.useState(false);\r\n    const [isSlidesActive, setSlidesActive] = React.useState(false);\r\n    const [pawCardAmount, setPawCardAmount] = React.useState(0);\r\n    const [swipe, setSwipe] = React.useState(false);\r\n    const [isCrowdsaleClosed, setCrowdsaleClosed] = React.useState(false)\r\n    const [isRefund, setIsRefund] = React.useState(false)\r\n    const [cardPrice, setCardPrice] = React.useState(0)\r\n    const [balance, setBalance] = React.useState(0)\r\n\r\n    const pawCardRef = useRef();\r\n    const sliderRef = useRef();\r\n    const sliderButtonRef = useRef();\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const scrollUp = () => {\r\n        document.documentElement.scrollTop = 0;\r\n    };\r\n\r\n    const handleLoginMetamask = async () => {\r\n        try {\r\n            const account = await walletService.getAccount()\r\n            dispatch(userActions.setUserData(account))\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const userAddress = useSelector(({ user }) => user.address);\r\n\r\n    const outsidePawCardClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(pawCardRef.current)) {\r\n            setCounterActive(false)\r\n        }\r\n    }\r\n\r\n    const outsideSliderClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(sliderRef.current) && !path.includes(sliderButtonRef.current)) {\r\n            setSlidesActive(false)\r\n        }\r\n    }\r\n\r\n    const onMenuBtnClick = () => {\r\n        setSlidesActive(false)\r\n        setIsMenuActive(!isMenuActive)\r\n    }\r\n\r\n    const handleCountCardsChange = (amount) => {\r\n        const newAmount = +pawCardAmount + amount;\r\n        if (isCrowdsaleClosed && isRefund && (newAmount > balance)) return;\r\n        if (newAmount <= 0) {\r\n            setPawCardAmount(0)\r\n        } else {\r\n            setPawCardAmount(newAmount)\r\n        }\r\n    }\r\n\r\n    const handleCountCardsInput = async ({target}) => {\r\n        const amount = target.value;\r\n        if (isCrowdsaleClosed && isRefund && (+amount > balance)) {\r\n            setPawCardAmount(+balance)\r\n        } else {\r\n            setPawCardAmount(+amount)\r\n        };\r\n    }\r\n\r\n    const handleBuyToken = async () => {\r\n        try {\r\n            const bought = await contractService.buyManyTokens(userAddress,pawCardAmount)\r\n            const balanceOf = await contractService.balanceOf(userAddress)\r\n            setBalance(balanceOf)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const handleRefund = async () => {\r\n        try {\r\n            const burn = await contractService.refundManyTokens(userAddress,pawCardAmount)\r\n            console.log('handleRefund isRefund',isRefund)\r\n            console.log('handleRefund burn',burn)\r\n            const balanceOf = await contractService.balanceOf(userAddress)\r\n            setBalance(balanceOf)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const getData = async () => {\r\n        try {\r\n            if (userAddress) {\r\n                const isRefund = await contractService.isRefund(userAddress)\r\n                setIsRefund(isRefund)\r\n            }\r\n            const isClosed = await contractService.isClosedCrowdsale()\r\n            setCrowdsaleClosed(isClosed)\r\n            const price = await contractService.tokenPrice()\r\n            setCardPrice(price)\r\n        } catch (e) {\r\n            console.error('Header getData',e);\r\n        }\r\n    }\r\n\r\n    const getBalance = async () => {\r\n        const balanceOf = await contractService.balanceOf(userAddress)\r\n        setBalance(balanceOf)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener('click', outsidePawCardClick)\r\n        document.body.addEventListener('click', outsideSliderClick)\r\n        return () => {\r\n            document.body.removeEventListener('click', outsidePawCardClick)\r\n            document.body.removeEventListener('click', outsideSliderClick)\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (window.pageYOffset > 1200) {\r\n                setIsTabActive(true)\r\n            } else {\r\n                setIsTabActive(false)\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (contractService) {\r\n            getData()\r\n        }\r\n    }, [userAddress,contractService])\r\n\r\n    React.useEffect(() => {\r\n        if (userAddress) {\r\n            getBalance()\r\n        }\r\n    }, [userAddress])\r\n\r\n    return (\r\n        <header className={classNames('header', {\r\n            'menu-shown': isMenuActive\r\n        })}>\r\n            <div className=\"container\">\r\n                <div className=\"header__content\">\r\n                    {isTabActive &&\r\n                        <img className=\"scroll-up-btn\" src={scrollUpImg} alt=\"\" onClick={scrollUp} />\r\n                    }\r\n\r\n                    <div className=\"m-menu-btn-wrapper\" onClick={() => onMenuBtnClick()}>\r\n                        <span className=\"m-menu-btn\"></span>\r\n                    </div>\r\n\r\n                    <div className=\"header__logo\">\r\n                        <NavLink to=\"/\">\r\n                            <img src={logo} alt=\"\" onClick={reload} />\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className=\"header__menu m-menu\">\r\n                        <div className=\"header__controls\">\r\n                            {!userAddress &&\r\n                            <div\r\n                            className=\"header__btn header__btn--bg\"\r\n                            onClick={handleLoginMetamask}\r\n                            >\r\n                                <img src={trust_img}/>\r\n                                <div>Login to Metamask</div>\r\n                            </div>\r\n                            }\r\n\r\n                            <div\r\n                            ref={sliderButtonRef}\r\n                              className={classNames('header__btn header__nft-card-btn', {\r\n                                  'header__nft-card-btn--active': isSlidesActive\r\n                              })}\r\n                              onClick={() => {\r\n                                  setSlidesActive(!isSlidesActive)\r\n                              }}\r\n                            >\r\n                                <div> My VIP NFT CARD </div>\r\n                                <div className=\"count-component\">\r\n                                    <div className=\"count-value\">\r\n                                        {balance}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"header__paw-card-wrapper\" ref={pawCardRef}>\r\n                                <div\r\n                                  className=\"header__btn header__paw-card-btn\"\r\n                                  onClick={() => setCounterActive(!isCounterActive)}\r\n                                >\r\n                                    {isCrowdsaleClosed && isRefund ?\r\n                                      'REFUND' : 'BUY VIP PAW CARD'\r\n                                    }\r\n\r\n                                    <div className={classNames('count-component-arrow', {\r\n                                        'count-component-arrow--up': isCounterActive,\r\n                                        'count-component-arrow--down': !isCounterActive\r\n                                    })}/>\r\n                                </div>\r\n                                {isCounterActive &&\r\n                                    <div className=\"header__paw-card paw-card\">\r\n                                    <div className=\"paw-card__counter\">\r\n                                      <div className=\"paw-card__counter-btn paw-card__counter-btn--minus\" onClick={() => handleCountCardsChange(-1)}></div>\r\n                                      <div className=\"paw-card__counter-value\">\r\n                                          <input\r\n                                            placeholder=\"0\"\r\n                                            type=\"number\"\r\n                                            value={pawCardAmount}\r\n                                            onChange={handleCountCardsInput}\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"paw-card__counter-btn paw-card__counter-btn--plus\" onClick={() => handleCountCardsChange(1)}></div>\r\n                                    </div>\r\n                                    <div\r\n                                    className=\"paw-card__price\"\r\n                                    >\r\n                                      {cardPrice && pawCardAmount ?\r\n                                        new BigNumber(cardPrice).multipliedBy(pawCardAmount).toFixed() :\r\n                                        0\r\n                                      } ETH\r\n                                    </div>\r\n                                    {isCrowdsaleClosed && isRefund ?\r\n                                    <div\r\n                                      className=\"paw-card__buy-btn\"\r\n                                      onClick={handleRefund}>\r\n                                        SEND TOKEN\r\n                                    </div> :\r\n                                    <div\r\n                                      className=\"paw-card__buy-btn\"\r\n                                      onClick={handleBuyToken}>\r\n                                        BUY CARD\r\n                                    </div>\r\n                                    }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"header__menu-footer\">\r\n                            <div className=\"header__maintenance\">Maintained by RocknBlock.io</div>\r\n                            <div className=\"header__copyright\">© 2020 BEAR Games. All rights reserved</div>\r\n                            <div className=\"header__socials\">\r\n                                <NavLink to={github_url}><img src={github} alt=\"\"/></NavLink>\r\n                                <NavLink to={twitter_url}><img src={twitter} alt=\"\"/></NavLink>\r\n                                <NavLink to={telegram_url}><img src={telegram} alt=\"\"/></NavLink>\r\n                                <NavLink to={youtube_url}><img src={youtube} alt=\"\"/></NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isSlidesActive &&\r\n                        <div className=\"header__swiper\" id=\"swiper\" ref={sliderRef}>\r\n                            {balance !== 0 ?\r\n                                <Swiper\r\n                                spaceBetween={0}\r\n                                slidesPerView={2}\r\n                                onSwiper={swiper => setSwipe(swiper)}\r\n                                //onSlideChangeTransitionEnd={handleSlideChange}\r\n                                >\r\n                                    {[...new Array(balance)].map((token, it) => {\r\n                                        const index = it;\r\n                                        return (\r\n                                            <SwiperSlide\r\n                                            key={`token-${index}`}\r\n                                            >\r\n                                                <TokenCardComponent\r\n                                                index={index}\r\n                                                />\r\n                                            </SwiperSlide>\r\n                                        )\r\n                                    })}\r\n                                    <div className=\"media__btn media__btn--prev\" onClick={() => swipe.slidePrev()}>\r\n                                        <img src={arrowPrevImg} alt=\"\"/>\r\n                                    </div>\r\n                                    <div className=\"media__btn media__btn--next\" onClick={() => swipe.slideNext()}>\r\n                                        <img src={arrowNextImg} alt=\"\"/>\r\n                                    </div>\r\n                                </Swiper>\r\n                                :\r\n                                <div className=\"swiper-empty\">\r\n                                    nothing yet\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n",["77","78"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\store.js",[],["79","80"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\index.js",[],["81","82"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\wallet.js",["83"],"const initialState = {\r\n    type: '',\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case 'WALLET:SET_TYPE':\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","F:\\MySitesNew\\1_Projects\\bear-games\\src\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\contexts\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\actions\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\contractService\\contractDetails.js",["84"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\App.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\metamask\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\MainPage\\index.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":1,"nodeType":"91","endLine":18,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":9,"column":22,"nodeType":"94","messageId":"95","endLine":9,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":18,"column":8,"nodeType":"94","messageId":"95","endLine":18,"endColumn":20},{"ruleId":"92","severity":1,"message":"97","line":106,"column":19,"nodeType":"94","messageId":"95","endLine":106,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":169,"column":8,"nodeType":"100","endLine":169,"endColumn":37,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":175,"column":8,"nodeType":"100","endLine":175,"endColumn":21,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":204,"column":33,"nodeType":"106","endLine":204,"endColumn":55},{"ruleId":"85","replacedBy":"107"},{"ruleId":"87","replacedBy":"108"},{"ruleId":"85","replacedBy":"109"},{"ruleId":"87","replacedBy":"110"},{"ruleId":"85","replacedBy":"111"},{"ruleId":"87","replacedBy":"112"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":1,"nodeType":"91","endLine":15,"endColumn":2},{"ruleId":"89","severity":1,"message":"113","line":1,"column":1,"nodeType":"91","endLine":15,"endColumn":2},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'walletActions' is defined but never used.","Identifier","unusedVar","'metamask_img' is defined but never used.","'bought' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook React.useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["114"],["115"],["114"],["115"],["114"],["115"],"Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [userAddress, contractService, getData]",{"range":"122","text":"123"},"Update the dependencies array to be: [getBalance, userAddress]",{"range":"124","text":"125"},[5946,5975],"[userAddress, contractService, getData]",[6081,6094],"[getBalance, userAddress]"]