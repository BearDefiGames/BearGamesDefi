[{"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\index.js":"1","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\index.js":"2","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\user.js":"3","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\TokenCardComponent\\index.js":"4","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\index.js":"5","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\store.js":"6","F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\index.js":"7","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\wallet.js":"8","F:\\MySitesNew\\1_Projects\\bear-games\\src\\index.js":"9","F:\\MySitesNew\\1_Projects\\bear-games\\src\\contexts\\index.js":"10","F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\actions\\index.js":"11","F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\contractService\\contractDetails.js":"12","F:\\MySitesNew\\1_Projects\\bear-games\\src\\App.js":"13","F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\metamask\\index.js":"14","F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\MainPage\\index.js":"15","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Body\\WarStrategyComponent\\index.js":"16","F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Body\\MissionEconomicsComponent\\index.js":"17"},{"size":247,"mtime":1608036833475,"results":"18","hashOfConfig":"19"},{"size":956,"mtime":1607510101364,"results":"20","hashOfConfig":"19"},{"size":363,"mtime":1608037538536,"results":"21","hashOfConfig":"19"},{"size":1554,"mtime":1608896265762,"results":"22","hashOfConfig":"19"},{"size":14935,"mtime":1608897641994,"results":"23","hashOfConfig":"19"},{"size":232,"mtime":1607510101371,"results":"24","hashOfConfig":"19"},{"size":46,"mtime":1607510101368,"results":"25","hashOfConfig":"19"},{"size":306,"mtime":1608037552883,"results":"26","hashOfConfig":"19"},{"size":371,"mtime":1607510101366,"results":"27","hashOfConfig":"19"},{"size":63,"mtime":1607510101366,"results":"28","hashOfConfig":"19"},{"size":100,"mtime":1608036833483,"results":"29","hashOfConfig":"19"},{"size":9443,"mtime":1608827170773,"results":"30","hashOfConfig":"19"},{"size":386,"mtime":1608803711951,"results":"31","hashOfConfig":"19"},{"size":4203,"mtime":1608827870131,"results":"32","hashOfConfig":"19"},{"size":320,"mtime":1608803712029,"results":"33","hashOfConfig":"19"},{"size":4900,"mtime":1608895424041,"results":"34","hashOfConfig":"19"},{"size":5480,"mtime":1608895424027,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ieojwp",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\index.js",[],["77","78"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\user.js",["79"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\TokenCardComponent\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Header\\index.js",["80","81","82","83","84"],"import React, { useRef } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport BigNumber from \"bignumber.js\";\r\nimport TokenCardComponent from './TokenCardComponent';\r\n\r\nimport {userActions, walletActions} from '../../redux/actions';\r\nimport { useContractContext } from '../../contexts/contractContext';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport './header.scss';\r\n\r\nimport logo from '../../assets/img/logo.svg'\r\nimport scrollUpImg from '../../assets/img/scroll-up.svg'\r\nimport metamask_img from '../../assets/img/metamask.svg'\r\nimport github from \"../../assets/img/socials/github_header.svg\";\r\nimport twitter from \"../../assets/img/socials/twitter_header.svg\";\r\nimport telegram from \"../../assets/img/socials/telegram_header.svg\";\r\nimport youtube from \"../../assets/img/socials/youtube_header.svg\";\r\nimport { github_url, telegram_url, twitter_url, youtube_url } from \"../Footer\";\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { walletService, contractService } = useContractContext()\r\n\r\n    const [isMenuActive, setIsMenuActive] = React.useState(false)\r\n    const [isTabActive, setIsTabActive] = React.useState(false);\r\n    const [isCounterActive, setCounterActive] = React.useState(false);\r\n    const [isSlidesActive, setSlidesActive] = React.useState(false);\r\n    const [pawCardAmount, setPawCardAmount] = React.useState(0);\r\n    const [isCrowdsaleClosed, setCrowdsaleClosed] = React.useState(false)\r\n    const [isRefund, setIsRefund] = React.useState(false)\r\n    const [cardPrice, setCardPrice] = React.useState(0)\r\n    const [balance, setBalance] = React.useState(0)\r\n\r\n    const pawCardRef = useRef();\r\n    const sliderRef = useRef();\r\n    const sliderButtonRef = useRef();\r\n\r\n    const reload = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const scrollUp = () => {\r\n        document.documentElement.scrollTop = 0;\r\n    };\r\n\r\n    const handleLoginMetamask = async () => {\r\n        try {\r\n            const account = await walletService.getAccount()\r\n            dispatch(userActions.setUserData(account))\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    const userAddress = useSelector(({ user }) => user.address);\r\n\r\n    const outsidePawCardClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(pawCardRef.current)) {\r\n            setCounterActive(false)\r\n        }\r\n    }\r\n\r\n    const outsideSliderClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(sliderRef.current) && !path.includes(sliderButtonRef.current)) {\r\n            setSlidesActive(false)\r\n        }\r\n    }\r\n\r\n    const onMenuBtnClick = () => {\r\n        setSlidesActive(false)\r\n        setIsMenuActive(!isMenuActive)\r\n    }\r\n\r\n    const handleCountCardsChange = (amount) => {\r\n        const newAmount = +pawCardAmount + amount;\r\n        if (isCrowdsaleClosed && isRefund && (newAmount > balance)) return;\r\n        if (newAmount <= 0) {\r\n            setPawCardAmount(0)\r\n        } else {\r\n            setPawCardAmount(newAmount)\r\n        }\r\n    }\r\n\r\n    const handleCountCardsInput = async ({target}) => {\r\n        const amount = target.value;\r\n        if (isCrowdsaleClosed && isRefund && (+amount > balance)) {\r\n            setPawCardAmount(+balance)\r\n        } else {\r\n            setPawCardAmount(+amount)\r\n        };\r\n    }\r\n\r\n    const handleBuyToken = async () => {\r\n        try {\r\n            const bought = await contractService.buyManyTokens(userAddress,pawCardAmount)\r\n            const balanceOf = await contractService.balanceOf(userAddress)\r\n            setBalance(balanceOf)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const handleRefund = async () => {\r\n        try {\r\n            const burn = await contractService.refundManyTokens(userAddress,pawCardAmount)\r\n            console.log('handleRefund isRefund',isRefund)\r\n            console.log('handleRefund burn',burn)\r\n            const balanceOf = await contractService.balanceOf(userAddress)\r\n            setBalance(balanceOf)\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const getData = async () => {\r\n        try {\r\n            if (userAddress) {\r\n                const isRefund = await contractService.isRefund(userAddress)\r\n                setIsRefund(isRefund)\r\n            }\r\n            const isClosed = await contractService.isClosedCrowdsale()\r\n            setCrowdsaleClosed(isClosed)\r\n            const price = await contractService.tokenPrice()\r\n            setCardPrice(price)\r\n        } catch (e) {\r\n            console.error('Header getData',e);\r\n        }\r\n    }\r\n\r\n    const getBalance = async () => {\r\n        const balanceOf = await contractService.balanceOf(userAddress)\r\n        setBalance(balanceOf)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener('click', outsidePawCardClick)\r\n        document.body.addEventListener('click', outsideSliderClick)\r\n        return () => {\r\n            document.body.removeEventListener('click', outsidePawCardClick)\r\n            document.body.removeEventListener('click', outsideSliderClick)\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (window.pageYOffset > 1200) {\r\n                setIsTabActive(true)\r\n            } else {\r\n                setIsTabActive(false)\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (contractService) {\r\n            getData()\r\n        }\r\n    }, [userAddress,contractService])\r\n\r\n    React.useEffect(() => {\r\n        if (userAddress) {\r\n            getBalance()\r\n        }\r\n    }, [userAddress])\r\n\r\n    return (\r\n        <header className={classNames('header', {\r\n            'menu-shown': isMenuActive\r\n        })}>\r\n            <div className=\"container\">\r\n                <div className=\"header__content\">\r\n                    {isTabActive &&\r\n                        <img className=\"scroll-up-btn\" src={scrollUpImg} alt=\"\" onClick={scrollUp} />\r\n                    }\r\n\r\n                    <div className=\"m-menu-btn-wrapper\" onClick={() => onMenuBtnClick()}>\r\n                        <span className=\"m-menu-btn\"></span>\r\n                    </div>\r\n\r\n                    <div className=\"header__logo\">\r\n                        <NavLink to=\"/\">\r\n                            <img src={logo} alt=\"\" onClick={reload} />\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className=\"header__menu m-menu\">\r\n                        <div className=\"header__controls\">\r\n                            {!userAddress &&\r\n                            <div\r\n                            className=\"header__btn header__btn--bg\"\r\n                            onClick={handleLoginMetamask}\r\n                            >\r\n                                <img src={metamask_img}/>\r\n                                <div>Login to Metamask</div>\r\n                            </div>\r\n                            }\r\n\r\n                            <div\r\n                            ref={sliderButtonRef}\r\n                              className={classNames('header__btn header__nft-card-btn', {\r\n                                  'header__nft-card-btn--active': isSlidesActive\r\n                              })}\r\n                              onClick={() => {\r\n                                  setSlidesActive(!isSlidesActive)\r\n                              }}\r\n                            >\r\n                                <div> My VIP NFT CARD </div>\r\n                                <div className=\"count-component\">\r\n                                    <div className=\"count-value\">\r\n                                        {balance}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"header__paw-card-wrapper\" ref={pawCardRef}>\r\n                                <div\r\n                                  className=\"header__btn header__paw-card-btn\"\r\n                                  onClick={() => setCounterActive(!isCounterActive)}\r\n                                >\r\n                                    {isCrowdsaleClosed && isRefund ?\r\n                                    <div className=\"header__paw-card-btn-text\">REFUND</div> :\r\n                                    <div className=\"header__paw-card-btn-text\">BUY VIP PAW CARD</div>\r\n                                    }\r\n\r\n                                    <div className={classNames('count-component-arrow', {\r\n                                        'count-component-arrow--up': isCounterActive,\r\n                                        'count-component-arrow--down': !isCounterActive\r\n                                    })}/>\r\n                                </div>\r\n                                {isCounterActive &&\r\n                                    <div className=\"header__paw-card paw-card\">\r\n                                    <div className=\"paw-card__counter\">\r\n                                      <div className=\"paw-card__counter-btn paw-card__counter-btn--minus\" onClick={() => handleCountCardsChange(-1)}></div>\r\n                                      <div className=\"paw-card__counter-value\">\r\n                                          <input\r\n                                            placeholder=\"0\"\r\n                                            type=\"number\"\r\n                                            value={pawCardAmount}\r\n                                            onChange={handleCountCardsInput}\r\n                                          />\r\n                                      </div>\r\n                                      <div className=\"paw-card__counter-btn paw-card__counter-btn--plus\" onClick={() => handleCountCardsChange(1)}></div>\r\n                                    </div>\r\n                                    <div\r\n                                    className=\"paw-card__price\"\r\n                                    >\r\n                                      {cardPrice && pawCardAmount ?\r\n                                        new BigNumber(cardPrice).multipliedBy(pawCardAmount).toFixed() :\r\n                                        0\r\n                                      } ETH\r\n                                    </div>\r\n                                    {isCrowdsaleClosed && isRefund ?\r\n                                    <div\r\n                                      className=\"paw-card__buy-btn\"\r\n                                      onClick={handleRefund}>\r\n                                        SEND TOKEN\r\n                                    </div> :\r\n                                    <div\r\n                                      className=\"paw-card__buy-btn\"\r\n                                      onClick={handleBuyToken}>\r\n                                        BUY CARD\r\n                                    </div>\r\n                                    }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"header__menu-footer\">\r\n                            <div className=\"header__maintenance\">Maintained by RocknBlock.io</div>\r\n                            <div className=\"header__copyright\">© 2020 BEAR Games. All rights reserved</div>\r\n                            <div className=\"header__version\">Lite Paper v1.0</div>\r\n                            <div className=\"header__socials\">\r\n                                <NavLink to={github_url}><img src={github} alt=\"\"/></NavLink>\r\n                                <NavLink to={twitter_url}><img src={twitter} alt=\"\"/></NavLink>\r\n                                <NavLink to={telegram_url}><img src={telegram} alt=\"\"/></NavLink>\r\n                                <NavLink to={youtube_url}><img src={youtube} alt=\"\"/></NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isSlidesActive &&\r\n                        <div className=\"header__swiper\" id=\"swiper\" ref={sliderRef}>\r\n                            {balance !== 0 ?\r\n                                <div className=\"header__swiper-inner\">\r\n                                    <div className=\"swiper-button-prev\"></div>\r\n                                    <div className=\"swiper-button-next\"></div>\r\n                                    <Swiper\r\n                                    spaceBetween={0}\r\n                                    slidesPerView={3}\r\n                                    navigation={{\r\n                                        prevEl: '.swiper-button-prev',\r\n                                        nextEl: '.swiper-button-next'\r\n                                    }}\r\n                                    breakpoints={{\r\n                                        0: {\r\n                                            slidesPerView: 1,\r\n                                        },\r\n                                        768: {\r\n                                            slidesPerView: 2,\r\n                                        },\r\n                                        1024: {\r\n                                            slidesPerView: 3,\r\n                                        }\r\n                                    }}\r\n                                    >\r\n                                        {[...new Array(balance)].map((token, it) => {\r\n                                            const index = it;\r\n                                            return (\r\n                                                <SwiperSlide\r\n                                                key={`token-${index}`}\r\n                                                >\r\n                                                    <TokenCardComponent\r\n                                                    index={index}\r\n                                                    />\r\n                                                </SwiperSlide>\r\n                                            )\r\n                                        })}\r\n                                    </Swiper>\r\n                                </div>\r\n                                :\r\n                                <div className=\"swiper-empty\">\r\n                                    nothing yet\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n",["85","86"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\store.js",[],["87","88"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\reducers\\wallet.js",["89"],"const initialState = {\r\n    type: '',\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case 'WALLET:SET_TYPE':\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}",["90","91"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\index.js",[],["92","93"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\contexts\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\redux\\actions\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\contractService\\contractDetails.js",["94"],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\App.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\utils\\metamask\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\pages\\MainPage\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Body\\WarStrategyComponent\\index.js",[],"F:\\MySitesNew\\1_Projects\\bear-games\\src\\components\\Body\\MissionEconomicsComponent\\index.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":1,"nodeType":"101","endLine":18,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":10,"column":22,"nodeType":"104","messageId":"105","endLine":10,"endColumn":35},{"ruleId":"102","severity":1,"message":"106","line":105,"column":19,"nodeType":"104","messageId":"105","endLine":105,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":168,"column":8,"nodeType":"109","endLine":168,"endColumn":37,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":174,"column":8,"nodeType":"109","endLine":174,"endColumn":21,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":203,"column":33,"nodeType":"115","endLine":203,"endColumn":58},{"ruleId":"95","replacedBy":"116"},{"ruleId":"97","replacedBy":"117"},{"ruleId":"95","replacedBy":"118"},{"ruleId":"97","replacedBy":"119"},{"ruleId":"99","severity":1,"message":"100","line":5,"column":1,"nodeType":"101","endLine":15,"endColumn":2},{"ruleId":"95","replacedBy":"120"},{"ruleId":"97","replacedBy":"121"},{"ruleId":"95","replacedBy":"122"},{"ruleId":"97","replacedBy":"123"},{"ruleId":"99","severity":1,"message":"124","line":1,"column":1,"nodeType":"101","endLine":15,"endColumn":2},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'walletActions' is defined but never used.","Identifier","unusedVar","'bought' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook React.useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["125"],["126"],["125"],["126"],["125"],["126"],["125"],["126"],"Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [userAddress, contractService, getData]",{"range":"133","text":"134"},"Update the dependencies array to be: [getBalance, userAddress]",{"range":"135","text":"136"},[5815,5844],"[userAddress, contractService, getData]",[5950,5963],"[getBalance, userAddress]"]